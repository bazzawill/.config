Info	2022-08-24 13:52:57.073	default_logger_delegate.cpp:162	msedge --enable-crashpad (1363046)	"Logger initialized with format:%level	%datetime{%Y-%M-%d %H:%m:%s.%g}	%fbase:%line	%process	""%msg""	%func	%thread"	void mipns::DefaultLoggerDelegate::InitHelper(const string&)	140688381208256
Info	2022-08-24 13:52:57.073	default_logger_delegate.cpp:163	msedge --enable-crashpad (1363046)	"Log file:/home/bazza/.config/microsoft-edge/Default/Sync Data/mip/logs/mip_sdk.miplog"	void mipns::DefaultLoggerDelegate::InitHelper(const string&)	140688381208256
Info	2022-08-24 13:52:57.073	default_logger_delegate.cpp:164	msedge --enable-crashpad (1363046)	"Machine name: [unknown-host], User name: [bazza]"	void mipns::DefaultLoggerDelegate::InitHelper(const string&)	140688381208256
Info	2022-08-24 13:52:57.074	mip_core_context_impl.cpp:83	msedge --enable-crashpad (1363046)	"Loading context for application: [Microsoft Edge], Application version: [104.0.1293.63], Application ID: [ecd6b820-32c2-49b6-98a6-444530e5a77a], Process name: [msedge --enable-crashpad], MIP SDK version: [1.11.55-alpha], Path: [/home/bazza/.config/microsoft-edge/Default/Sync Data]"	mipns::MipCoreContextImpl::MipCoreContextImpl(const std::shared_ptr<const mipns::MipConfiguration>&, const std::shared_ptr<mipns::OneDSAriaHelper>&)	140688381208256
Warning	2022-08-24 13:52:57.074	protection_profile_impl_cc.cpp:98	msedge --enable-crashpad (1363046)	"Deprecated API call - please provide the auth delegate when creating the protection engine instead"	mip_cc_result MIP_CC_CreateProtectionProfileSettings(mip_cc_mip_context, mip_cc_cache_storage_type, const void*, mip_cc_consent_callback, mip_cc_handle**, mip_cc_error*)	140688381208256
Info	2022-08-24 13:52:57.074	protection_profile_impl.cpp:56	msedge --enable-crashpad (1363046)	"Starting API call: protection_profile_pre_initialize"	std::shared_ptr<mipns::TelemetryContext> mipns::PreInitializeProtection(const mipns::ProtectionProfile::Settings&)	140688381208256
Info	2022-08-24 13:52:57.074	protection_profile_impl.cpp:52	msedge --enable-crashpad (1363046)	"Loading protection profile. EUL caching state: [1]"	mipns::PreInitializeProtection(const mipns::ProtectionProfile::Settings&)::<lambda(const std::shared_ptr<mipns::TelemetryContext>&)>	140688381208256
Info	2022-08-24 13:52:57.074	protection_profile_impl.cpp:56	msedge --enable-crashpad (1363046)	"Ended API call: protection_profile_pre_initialize"	std::shared_ptr<mipns::TelemetryContext> mipns::PreInitializeProtection(const mipns::ProtectionProfile::Settings&)	140688381208256
Info	2022-08-24 13:52:57.074	protection_profile_impl.cpp:164	msedge --enable-crashpad (1363046)	"Starting API call: protection_profile_load"	static std::shared_ptr<mipns::ProtectionProfile> mipns::ProtectionProfile::Load(const mipns::ProtectionProfile::Settings&)	140688381208256
Info	2022-08-24 13:52:57.075	storage_manager.cpp:76	msedge --enable-crashpad (1363046)	"StorageManager configured to use in-memory caching."	mipns::StorageManager::StorageManager(const std::shared_ptr<mipns::MipContext>&, const string&, bool, const std::shared_ptr<mipns::LicenseStore>&, const std::shared_ptr<mipns::StorageDelegate>&)	140688381208256
Info	2022-08-24 13:52:57.075	storage_manager.cpp:85	msedge --enable-crashpad (1363046)	"Protection storage path: :memory:"	mipns::StorageManager::StorageManager(const std::shared_ptr<mipns::MipContext>&, const string&, bool, const std::shared_ptr<mipns::LicenseStore>&, const std::shared_ptr<mipns::StorageDelegate>&)	140688381208256
Info	2022-08-24 13:52:57.075	protection_profile_impl.cpp:186	msedge --enable-crashpad (1363046)	"Protection API configured to use default HttpDelegate"	mipns::ProtectionProfileImpl::ProtectionProfileImpl(const mipns::ProtectionProfile::Settings&, const std::shared_ptr<mipns::ProtectionEngineManager>&, const std::shared_ptr<mipns::HttpDelegate>&, const std::shared_ptr<mipns::TaskDispatcherDelegate>&, const std::shared_ptr<mipns::TelemetryContext>&)	140688381208256
Info	2022-08-24 13:52:57.075	protection_profile_impl.cpp:192	msedge --enable-crashpad (1363046)	"Protection API configured to use default TaskDispatcherDelegate"	mipns::ProtectionProfileImpl::ProtectionProfileImpl(const mipns::ProtectionProfile::Settings&, const std::shared_ptr<mipns::ProtectionEngineManager>&, const std::shared_ptr<mipns::HttpDelegate>&, const std::shared_ptr<mipns::TaskDispatcherDelegate>&, const std::shared_ptr<mipns::TelemetryContext>&)	140688381208256
Info	2022-08-24 13:52:57.075	protection_profile_impl.cpp:164	msedge --enable-crashpad (1363046)	"Ended API call: protection_profile_load"	static std::shared_ptr<mipns::ProtectionProfile> mipns::ProtectionProfile::Load(const mipns::ProtectionProfile::Settings&)	140688381208256
Info	2022-08-24 13:52:57.075	protection_profile_impl.cpp:292	msedge --enable-crashpad (1363046)	"Starting API call: protection_profile_add_engine"	virtual std::shared_ptr<mipns::ProtectionEngine> mipns::ProtectionProfileImpl::AddEngine(const mipns::ProtectionEngine::Settings&)	140688381208256
Info	2022-08-24 13:52:57.075	protection_engine_manager.cpp:63	msedge --enable-crashpad (1363046)	"Adding engine with ID ebb35c0e-93a9-4be3-95dc-51e4df14e16a"	std::shared_ptr<mipns::ProtectionEngine> mipns::ProtectionEngineManager::AddEngine(const mipns::ProtectionEngine::Settings&, const std::shared_ptr<mipns::TelemetryContext>&)	140688381208256
Info	2022-08-24 13:52:57.076	protection_profile_impl.cpp:292	msedge --enable-crashpad (1363046)	"Ended API call: protection_profile_add_engine"	virtual std::shared_ptr<mipns::ProtectionEngine> mipns::ProtectionProfileImpl::AddEngine(const mipns::ProtectionEngine::Settings&)	140688381208256
Info	2022-08-24 13:52:57.076	protection_engine_impl.cpp:554	msedge --enable-crashpad (1363046)	"Starting API call: protection_engine_create_publishing_protection_handler"	virtual std::shared_ptr<mipns::ProtectionHandler> mipns::ProtectionEngineImpl::CreateProtectionHandlerForPublishing(const mipns::ProtectionHandler::PublishingSettings&, const std::shared_ptr<void>&)	140688381208256
Info	2022-08-24 13:52:57.076	protection_engine_impl.cpp:554	msedge --enable-crashpad (1363046)	"Starting API task: protection_engine_create_publishing_protection_handler"	virtual std::shared_ptr<mipns::ProtectionHandler> mipns::ProtectionEngineImpl::CreateProtectionHandlerForPublishing(const mipns::ProtectionHandler::PublishingSettings&, const std::shared_ptr<void>&)	140688381208256
Info	2022-08-24 13:52:57.076	service_discovery_helper.cpp:185	msedge --enable-crashpad (1363046)	"Using cloud endpoint base url domain 'https://api.aadrm.com' for service discovery"	std::shared_ptr<mipns::ServiceDetails> mipns::ServiceDiscoveryHelper::GetServiceDetailsWithLicense(const std::vector<std::__cxx11::basic_string<char> >&, const string&)	140688381208256
Info	2022-08-24 13:52:57.076	service_discovery_helper.cpp:206	msedge --enable-crashpad (1363046)	"No redirected url found"	std::shared_ptr<mipns::ServiceDetails> mipns::ServiceDiscoveryHelper::GetServiceDetailsWithLicense(const std::vector<std::__cxx11::basic_string<char> >&, const string&)	140688381208256
Info	2022-08-24 13:52:57.076	service_discovery_helper.cpp:221	msedge --enable-crashpad (1363046)	"No cached DNS entry found"	std::shared_ptr<mipns::ServiceDetails> mipns::ServiceDiscoveryHelper::GetServiceDetailsWithLicense(const std::vector<std::__cxx11::basic_string<char> >&, const string&)	140688381208256
Info	2022-08-24 13:52:57.076	service_discovery_helper.cpp:255	msedge --enable-crashpad (1363046)	"Service Details Domain: https://api.aadrm.com"	std::shared_ptr<mipns::ServiceDetails> mipns::ServiceDiscoveryHelper::GetServiceDetailsWithLicense(const std::vector<std::__cxx11::basic_string<char> >&, const string&)	140688381208256
Info	2022-08-24 13:52:57.076	service_discovery_helper.cpp:256	msedge --enable-crashpad (1363046)	"Service Details DNS-resolved URL: https://api.aadrm.com"	std::shared_ptr<mipns::ServiceDetails> mipns::ServiceDiscoveryHelper::GetServiceDetailsWithLicense(const std::vector<std::__cxx11::basic_string<char> >&, const string&)	140688381208256
Info	2022-08-24 13:52:57.076	service_discovery_helper.cpp:280	msedge --enable-crashpad (1363046)	"Service Details Endpoint Type: Azure RMS"	std::shared_ptr<mipns::ServiceDetails> mipns::ServiceDiscoveryHelper::GetServiceDetailsWithLicense(const std::vector<std::__cxx11::basic_string<char> >&, const string&)	140688381208256
Info	2022-08-24 13:52:57.076	service_discovery_helper.cpp:290	msedge --enable-crashpad (1363046)	"Service discovery disabled. Using default service URLs"	std::shared_ptr<mipns::ServiceDiscoveryDetails> mipns::ServiceDiscoveryHelper::FindCachedServiceDiscoveryDetails(const std::shared_ptr<mipns::ServiceDetails>&)	140688381208256
Info	2022-08-24 13:52:57.076	protection_http_provider.cpp:45	msedge --enable-crashpad (1363046)	"https://api.aadrm.com/my/v2/publishinglicenses is auto-approved and requires no user consent."	virtual bool mipns::ProtectionHttpProvider::RequestUserConsent(const string&, const mipns::Identity&, const string&)	140688381208256
Info	2022-08-24 13:52:57.076	auth_info_store.cpp:80	msedge --enable-crashpad (1363046)	"Failed to find OAuth2 challenge in cache. Domain: api.aadrm.com IssuerId: ''"	std::__cxx11::string mipns::AuthInfoStore::FindChallenge(const string&, const string&)	140688381208256
Info	2022-08-24 13:52:57.076	auth_request_transformer.cpp:48	msedge --enable-crashpad (1363046)	"Failed to get auth token from cached auth header. Failed with: [InternalError: 'Cannot parse empty auth header or request URL']"	virtual void mipns::AuthRequestTransformer::TransformRequestPriorToInitialSend(mipns::HttpRequestBase&, const std::shared_ptr<void>&)	140688381208256
Info	2022-08-24 13:52:57.076	http_director_impl.cpp:132	msedge --enable-crashpad (1363046)	"Sending HTTP request: ID: f5982336-1c02-4d0e-9188-80f4ff6cc4b1, Type: POST, Url: https://api.aadrm.com/my/v2/publishinglicenses, Body Size: 228, Headers['Accept'] = 'application/json', Headers['Content-Type'] = 'application/json', Headers['Accept-Language'] = 'en-US', Headers['x-ms-rms-platform-id'] = 'AppName=Microsoft Edge;AppVersion=104.0.1293.63;DevicePlatform=WindowsStore;SDKVersion=4.3;UniqueId=ecd6b820-32c2-49b6-98a6-444530e5a77a;OsName=Arch Linux;OsVersion=5.17.9-arch1-1;MipVersion=1.11.55-alpha;'"	void mipns::HttpDirectorImpl::DoSendHttp(bool, const std::shared_ptr<mipns::HttpTelemetryHelper>&, const std::shared_ptr<mipns::HttpRequestBase>&, const std::shared_ptr<void>&, const std::function<void(const std::shared_ptr<mipns::HttpRequest>&, const std::shared_ptr<mipns::HttpResponse>&)>&, const std::function<void(const std::__exception_ptr::exception_ptr&)>&)	140688381208256
Info	2022-08-24 13:52:57.685	http_client_base.cpp:45	msedge --enable-crashpad (1363046)	"HTTP response time (seconds): 0.607771 ID: f5982336-1c02-4d0e-9188-80f4ff6cc4b1"	mipns::HttpClientBase::SendAsync(const std::shared_ptr<mipns::HttpRequest>&, const std::shared_ptr<void>&, const std::function<void(std::shared_ptr<mipns::HttpOperation>)>&)::<lambda(const std::shared_ptr<mipns::HttpOperation>&)>	140688018732736
Info	2022-08-24 13:52:57.685	http_director_impl.cpp:38	msedge --enable-crashpad (1363046)	"Received HTTP response: ID: f5982336-1c02-4d0e-9188-80f4ff6cc4b1, Status: 401, Time: 2022-08-24T04:22:57Z, Body: {""Message"":""Authorization has been denied for this request.""}, Headers['Date'] = 'Wed, 24 Aug 2022 04:22:57 GMT', Headers['Pragma'] = 'no-cache', Headers['Expires'] = '-1', Headers['X-Cache'] = 'CONFIG_NOCACHE', Headers['Content-Type'] = 'application/json; charset=utf-8', Headers['X-MSEdge-Ref'] = 'Ref A: 6E18A03F6A1646AAA6F5AA11C56BBA18 Ref B: MEL01EDGE1317 Ref C: 2022-08-24T04:22:57Z', Headers['X-Powered-By'] = 'ASP.NET', Headers['Cache-Control'] = 'no-cache', Headers['CorrelationId'] = 'f5982336-1c02-4d0e-9188-80f4ff6cc4b1', Headers['Content-Length'] = '61', Headers['WWW-Authenticate'] = 'Bearer resource=""https://aadrm.com"", realm="""", authorization=""https://login.windows.net/common/oauth2/authorize""', Headers['X-AspNet-Version'] = '4.0.30319', Headers['client-request-id'] = 'f5982336-1c02-4d0e-9188-80f4ff6cc4b1', Headers['Strict-Transport-Security'] = 'max-age=31536000; includeSubDomains'"	void {anonymous}::LogHttpOperationDetails(const std::shared_ptr<mipns::HttpOperation>&)	140688381208256
Info	2022-08-24 13:52:57.685	auth_request_transformer.cpp:155	msedge --enable-crashpad (1363046)	"Requesting auth token from app. Resource: 'https://aadrm.com', Authority: 'https://login.windows.net/common', Scope: '', Claims: ''"	std::__cxx11::string mipns::AuthRequestTransformer::GetAuthToken(const mipns::AuthDelegate::OAuth2Challenge&, const std::shared_ptr<void>&)	140688381208256
Info	2022-08-24 13:52:57.685	auth_request_transformer.cpp:169	msedge --enable-crashpad (1363046)	"Authentication response time (seconds): 1.34e-05"	std::__cxx11::string mipns::AuthRequestTransformer::GetAuthToken(const mipns::AuthDelegate::OAuth2Challenge&, const std::shared_ptr<void>&)	140688381208256
Warning	2022-08-24 13:52:57.685	auth_info_store.cpp:58	msedge --enable-crashpad (1363046)	"Removing OAuth2 challenge from cache. Domain: api.aadrm.com IssuerId: ''"	void mipns::AuthInfoStore::DeleteChallenge(const string&, const string&)	140688381208256
Error	2022-08-24 13:52:57.685	http_director_impl.cpp:258	msedge --enable-crashpad (1363046)	"HTTP operation failed Failed with: [NoAuthTokenError: 'Client application failed to provide authentication token for HTTP request.']"	void mipns::HttpDirectorImpl::OnHttpOperationFailed(const std::shared_ptr<mipns::HttpRequest>&, const std::shared_ptr<mipns::HttpResponse>&, const std::__exception_ptr::exception_ptr&, const std::function<void(const std::__exception_ptr::exception_ptr&)>&)	140688381208256
Error	2022-08-24 13:52:57.685	protection_engine_impl.cpp:554	msedge --enable-crashpad (1363046)	"Failed API call: protection_engine_create_publishing_protection_handler Failed with: [NoAuthTokenError: 'Client application failed to provide authentication token for HTTP request., CorrelationId=628a7a63-1551-454b-8271-486dc63289b3, CorrelationId.Description=ProtectionEngine']"	virtual std::shared_ptr<mipns::ProtectionHandler> mipns::ProtectionEngineImpl::CreateProtectionHandlerForPublishing(const mipns::ProtectionHandler::PublishingSettings&, const std::shared_ptr<void>&)	140688381208256
Warning	2022-08-24 13:52:57.685	api_utils.h:249	msedge --enable-crashpad (1363046)	"Start calling error callback for API: protection_engine_create_publishing_protection_handler"	mipns::TryExecuteFailureCallback(const FailureFunc&, const std::__exception_ptr::exception_ptr&, bool, const std::shared_ptr<mipns::TaskDispatcherDelegate>&, const string&, const std::shared_ptr<void>&)::<lambda()> [with FailureFunc = mipns::ProtectionEngineImpl::CreateProtectionHandlerForPublishing(const mipns::ProtectionHandler::PublishingSettings&, const std::shared_ptr<void>&)::<lambda(const std::__exception_ptr::exception_ptr&)>]	140688381208256
Warning	2022-08-24 13:52:57.685	api_utils.h:251	msedge --enable-crashpad (1363046)	"Ended calling error callback for API: protection_engine_create_publishing_protection_handler"	mipns::TryExecuteFailureCallback(const FailureFunc&, const std::__exception_ptr::exception_ptr&, bool, const std::shared_ptr<mipns::TaskDispatcherDelegate>&, const string&, const std::shared_ptr<void>&)::<lambda()> [with FailureFunc = mipns::ProtectionEngineImpl::CreateProtectionHandlerForPublishing(const mipns::ProtectionHandler::PublishingSettings&, const std::shared_ptr<void>&)::<lambda(const std::__exception_ptr::exception_ptr&)>]	140688381208256
Info	2022-08-24 13:52:57.685	protection_engine_impl.cpp:554	msedge --enable-crashpad (1363046)	"Ended API call: protection_engine_create_publishing_protection_handler"	virtual std::shared_ptr<mipns::ProtectionHandler> mipns::ProtectionEngineImpl::CreateProtectionHandlerForPublishing(const mipns::ProtectionHandler::PublishingSettings&, const std::shared_ptr<void>&)	140688381208256
Info	2022-08-24 13:52:59.409	mip_core_context_impl.cpp:83	msedge --enable-crashpad (1363046)	"Loading context for application: [Microsoft Edge], Application version: [104.0.1293.63], Application ID: [ecd6b820-32c2-49b6-98a6-444530e5a77a], Process name: [msedge --enable-crashpad], MIP SDK version: [1.11.55-alpha], Path: [/home/bazza/.config/microsoft-edge/Default/Sync Data]"	mipns::MipCoreContextImpl::MipCoreContextImpl(const std::shared_ptr<const mipns::MipConfiguration>&, const std::shared_ptr<mipns::OneDSAriaHelper>&)	140689141360320
Warning	2022-08-24 13:52:59.409	protection_profile_impl_cc.cpp:98	msedge --enable-crashpad (1363046)	"Deprecated API call - please provide the auth delegate when creating the protection engine instead"	mip_cc_result MIP_CC_CreateProtectionProfileSettings(mip_cc_mip_context, mip_cc_cache_storage_type, const void*, mip_cc_consent_callback, mip_cc_handle**, mip_cc_error*)	140689141360320
Info	2022-08-24 13:52:59.409	protection_profile_impl.cpp:56	msedge --enable-crashpad (1363046)	"Starting API call: protection_profile_pre_initialize"	std::shared_ptr<mipns::TelemetryContext> mipns::PreInitializeProtection(const mipns::ProtectionProfile::Settings&)	140689141360320
Info	2022-08-24 13:52:59.409	protection_profile_impl.cpp:52	msedge --enable-crashpad (1363046)	"Loading protection profile. EUL caching state: [1]"	mipns::PreInitializeProtection(const mipns::ProtectionProfile::Settings&)::<lambda(const std::shared_ptr<mipns::TelemetryContext>&)>	140689141360320
Info	2022-08-24 13:52:59.409	protection_profile_impl.cpp:56	msedge --enable-crashpad (1363046)	"Ended API call: protection_profile_pre_initialize"	std::shared_ptr<mipns::TelemetryContext> mipns::PreInitializeProtection(const mipns::ProtectionProfile::Settings&)	140689141360320
Info	2022-08-24 13:52:59.409	protection_profile_impl.cpp:164	msedge --enable-crashpad (1363046)	"Starting API call: protection_profile_load"	static std::shared_ptr<mipns::ProtectionProfile> mipns::ProtectionProfile::Load(const mipns::ProtectionProfile::Settings&)	140689141360320
Info	2022-08-24 13:52:59.410	storage_manager.cpp:76	msedge --enable-crashpad (1363046)	"StorageManager configured to use in-memory caching."	mipns::StorageManager::StorageManager(const std::shared_ptr<mipns::MipContext>&, const string&, bool, const std::shared_ptr<mipns::LicenseStore>&, const std::shared_ptr<mipns::StorageDelegate>&)	140689141360320
Info	2022-08-24 13:52:59.410	storage_manager.cpp:85	msedge --enable-crashpad (1363046)	"Protection storage path: :memory:"	mipns::StorageManager::StorageManager(const std::shared_ptr<mipns::MipContext>&, const string&, bool, const std::shared_ptr<mipns::LicenseStore>&, const std::shared_ptr<mipns::StorageDelegate>&)	140689141360320
Info	2022-08-24 13:52:59.410	protection_profile_impl.cpp:186	msedge --enable-crashpad (1363046)	"Protection API configured to use default HttpDelegate"	mipns::ProtectionProfileImpl::ProtectionProfileImpl(const mipns::ProtectionProfile::Settings&, const std::shared_ptr<mipns::ProtectionEngineManager>&, const std::shared_ptr<mipns::HttpDelegate>&, const std::shared_ptr<mipns::TaskDispatcherDelegate>&, const std::shared_ptr<mipns::TelemetryContext>&)	140689141360320
Info	2022-08-24 13:52:59.410	protection_profile_impl.cpp:192	msedge --enable-crashpad (1363046)	"Protection API configured to use default TaskDispatcherDelegate"	mipns::ProtectionProfileImpl::ProtectionProfileImpl(const mipns::ProtectionProfile::Settings&, const std::shared_ptr<mipns::ProtectionEngineManager>&, const std::shared_ptr<mipns::HttpDelegate>&, const std::shared_ptr<mipns::TaskDispatcherDelegate>&, const std::shared_ptr<mipns::TelemetryContext>&)	140689141360320
Info	2022-08-24 13:52:59.410	protection_profile_impl.cpp:164	msedge --enable-crashpad (1363046)	"Ended API call: protection_profile_load"	static std::shared_ptr<mipns::ProtectionProfile> mipns::ProtectionProfile::Load(const mipns::ProtectionProfile::Settings&)	140689141360320
Info	2022-08-24 13:52:59.410	protection_profile_impl.cpp:292	msedge --enable-crashpad (1363046)	"Starting API call: protection_profile_add_engine"	virtual std::shared_ptr<mipns::ProtectionEngine> mipns::ProtectionProfileImpl::AddEngine(const mipns::ProtectionEngine::Settings&)	140689141360320
Info	2022-08-24 13:52:59.410	protection_engine_manager.cpp:63	msedge --enable-crashpad (1363046)	"Adding engine with ID 4c19b0c4-0007-4dc4-9613-4eecaa33f383"	std::shared_ptr<mipns::ProtectionEngine> mipns::ProtectionEngineManager::AddEngine(const mipns::ProtectionEngine::Settings&, const std::shared_ptr<mipns::TelemetryContext>&)	140689141360320
Info	2022-08-24 13:52:59.410	protection_profile_impl.cpp:292	msedge --enable-crashpad (1363046)	"Ended API call: protection_profile_add_engine"	virtual std::shared_ptr<mipns::ProtectionEngine> mipns::ProtectionProfileImpl::AddEngine(const mipns::ProtectionEngine::Settings&)	140689141360320
Error	2022-08-24 13:52:59.411	license_parser.cpp:168	msedge --enable-crashpad (1363046)	"XPath returned no results"	std::vector<std::shared_ptr<mipns::xml::XmlNode> > {anonymous}::GetXmlNodesFromPath(const mipns::xml::XmlDocument&, const string&, const std::shared_ptr<mipns::xml::XmlNode>&)	140689141360320
Error	2022-08-24 13:52:59.411	license_parser.cpp:168	msedge --enable-crashpad (1363046)	"XPath returned no results"	std::vector<std::shared_ptr<mipns::xml::XmlNode> > {anonymous}::GetXmlNodesFromPath(const mipns::xml::XmlDocument&, const string&, const std::shared_ptr<mipns::xml::XmlNode>&)	140689141360320
Info	2022-08-24 13:52:59.411	protection_engine_impl.cpp:797	msedge --enable-crashpad (1363046)	"Starting API call: protection_engine_create_consuming_protection_handler"	virtual std::shared_ptr<mipns::ProtectionHandler> mipns::ProtectionEngineImpl::CreateProtectionHandlerForConsumption(const mipns::ProtectionHandler::ConsumptionSettings&, const std::shared_ptr<void>&)	140689141360320
Info	2022-08-24 13:52:59.411	protection_engine_impl.cpp:797	msedge --enable-crashpad (1363046)	"Starting API task: protection_engine_create_consuming_protection_handler"	virtual std::shared_ptr<mipns::ProtectionHandler> mipns::ProtectionEngineImpl::CreateProtectionHandlerForConsumption(const mipns::ProtectionHandler::ConsumptionSettings&, const std::shared_ptr<void>&)	140689141360320
Info	2022-08-24 13:52:59.411	usage_restrictions_client.cpp:109	msedge --enable-crashpad (1363046)	"Searching for cached usage restrictions response"	virtual std::shared_ptr<mipns::UsageRestrictionsResponse> mipns::UsageRestrictionsClient::FindCachedRestResponse(const mipns::UsageRestrictionsClientArgs&)	140689141360320
Info	2022-08-24 13:52:59.411	service_discovery_helper.cpp:179	msedge --enable-crashpad (1363046)	"Using publishing license domains for service discovery"	std::shared_ptr<mipns::ServiceDetails> mipns::ServiceDiscoveryHelper::GetServiceDetailsWithLicense(const std::vector<std::__cxx11::basic_string<char> >&, const string&)	140689141360320
Info	2022-08-24 13:52:59.411	service_discovery_helper.cpp:206	msedge --enable-crashpad (1363046)	"No redirected url found"	std::shared_ptr<mipns::ServiceDetails> mipns::ServiceDiscoveryHelper::GetServiceDetailsWithLicense(const std::vector<std::__cxx11::basic_string<char> >&, const string&)	140689141360320
Info	2022-08-24 13:52:59.411	service_discovery_helper.cpp:221	msedge --enable-crashpad (1363046)	"No cached DNS entry found"	std::shared_ptr<mipns::ServiceDetails> mipns::ServiceDiscoveryHelper::GetServiceDetailsWithLicense(const std::vector<std::__cxx11::basic_string<char> >&, const string&)	140689141360320
Info	2022-08-24 13:52:59.411	service_discovery_helper.cpp:255	msedge --enable-crashpad (1363046)	"Service Details Domain: https://ff47f615-3738-4b23-8ea0-d40f1b072282.rms.ap.aadrm.com/_wmcs/licensing"	std::shared_ptr<mipns::ServiceDetails> mipns::ServiceDiscoveryHelper::GetServiceDetailsWithLicense(const std::vector<std::__cxx11::basic_string<char> >&, const string&)	140689141360320
Info	2022-08-24 13:52:59.411	service_discovery_helper.cpp:256	msedge --enable-crashpad (1363046)	"Service Details DNS-resolved URL: https://api.aadrm.com"	std::shared_ptr<mipns::ServiceDetails> mipns::ServiceDiscoveryHelper::GetServiceDetailsWithLicense(const std::vector<std::__cxx11::basic_string<char> >&, const string&)	140689141360320
Info	2022-08-24 13:52:59.411	service_discovery_helper.cpp:280	msedge --enable-crashpad (1363046)	"Service Details Endpoint Type: Azure RMS"	std::shared_ptr<mipns::ServiceDetails> mipns::ServiceDiscoveryHelper::GetServiceDetailsWithLicense(const std::vector<std::__cxx11::basic_string<char> >&, const string&)	140689141360320
Info	2022-08-24 13:52:59.411	service_discovery_helper.cpp:290	msedge --enable-crashpad (1363046)	"Service discovery disabled. Using default service URLs"	std::shared_ptr<mipns::ServiceDiscoveryDetails> mipns::ServiceDiscoveryHelper::FindCachedServiceDiscoveryDetails(const std::shared_ptr<mipns::ServiceDetails>&)	140689141360320
Info	2022-08-24 13:52:59.411	protection_http_provider.cpp:45	msedge --enable-crashpad (1363046)	"https://api.aadrm.com/my/v2/enduserlicenses is auto-approved and requires no user consent."	virtual bool mipns::ProtectionHttpProvider::RequestUserConsent(const string&, const mipns::Identity&, const string&)	140689141360320
Info	2022-08-24 13:52:59.411	auth_info_store.cpp:80	msedge --enable-crashpad (1363046)	"Failed to find OAuth2 challenge in cache. Domain: api.aadrm.com IssuerId: '36f20724-69e2-4a33-b639-d941116a60f2'"	std::__cxx11::string mipns::AuthInfoStore::FindChallenge(const string&, const string&)	140689141360320
Info	2022-08-24 13:52:59.411	auth_request_transformer.cpp:48	msedge --enable-crashpad (1363046)	"Failed to get auth token from cached auth header. Failed with: [InternalError: 'Cannot parse empty auth header or request URL']"	virtual void mipns::AuthRequestTransformer::TransformRequestPriorToInitialSend(mipns::HttpRequestBase&, const std::shared_ptr<void>&)	140689141360320
Info	2022-08-24 13:52:59.411	http_director_impl.cpp:132	msedge --enable-crashpad (1363046)	"Sending HTTP request: ID: 0514cb35-f0d1-4d27-bc63-bdde514c2127, Type: POST, Url: https://api.aadrm.com/my/v2/enduserlicenses, Body Size: 9838, Headers['Accept'] = 'application/json', Headers['Content-Type'] = 'application/json', Headers['Accept-Language'] = 'en-US', Headers['x-ms-rms-platform-id'] = 'AppName=Microsoft Edge;AppVersion=104.0.1293.63;DevicePlatform=WindowsStore;SDKVersion=4.3;UniqueId=ecd6b820-32c2-49b6-98a6-444530e5a77a;OsName=Arch Linux;OsVersion=5.17.9-arch1-1;MipVersion=1.11.55-alpha;'"	void mipns::HttpDirectorImpl::DoSendHttp(bool, const std::shared_ptr<mipns::HttpTelemetryHelper>&, const std::shared_ptr<mipns::HttpRequestBase>&, const std::shared_ptr<void>&, const std::function<void(const std::shared_ptr<mipns::HttpRequest>&, const std::shared_ptr<mipns::HttpResponse>&)>&, const std::function<void(const std::__exception_ptr::exception_ptr&)>&)	140689141360320
Info	2022-08-24 13:52:59.602	http_client_base.cpp:45	msedge --enable-crashpad (1363046)	"HTTP response time (seconds): 0.190495 ID: 0514cb35-f0d1-4d27-bc63-bdde514c2127"	mipns::HttpClientBase::SendAsync(const std::shared_ptr<mipns::HttpRequest>&, const std::shared_ptr<void>&, const std::function<void(std::shared_ptr<mipns::HttpOperation>)>&)::<lambda(const std::shared_ptr<mipns::HttpOperation>&)>	140688186586816
Info	2022-08-24 13:52:59.602	http_director_impl.cpp:38	msedge --enable-crashpad (1363046)	"Received HTTP response: ID: 0514cb35-f0d1-4d27-bc63-bdde514c2127, Status: 401, Time: 2022-08-24T04:22:59Z, Body: {""Message"":""Authorization has been denied for this request.""}, Headers['Date'] = 'Wed, 24 Aug 2022 04:22:58 GMT', Headers['Pragma'] = 'no-cache', Headers['Expires'] = '-1', Headers['X-Cache'] = 'CONFIG_NOCACHE', Headers['Content-Type'] = 'application/json; charset=utf-8', Headers['X-MSEdge-Ref'] = 'Ref A: 233838BE495A41F795822D5C6CB88523 Ref B: MEL01EDGE0813 Ref C: 2022-08-24T04:22:59Z', Headers['X-Powered-By'] = 'ASP.NET', Headers['Cache-Control'] = 'no-cache', Headers['CorrelationId'] = '0514cb35-f0d1-4d27-bc63-bdde514c2127', Headers['Content-Length'] = '61', Headers['WWW-Authenticate'] = 'Bearer resource=""https://aadrm.com"", realm=""73bbf4e9-0688-4946-aea9-bd0bb40ecf07"", authorization=""https://login.windows.net/73bbf4e9-0688-4946-aea9-bd0bb40ecf07/oauth2/authorize""', Headers['X-AspNet-Version'] = '4.0.30319', Headers['client-request-id'] = '0514cb35-f0d1-4d27-bc63-bdde514c2127', Headers['Strict-Transport-Security'] = 'max-age=31536000; includeSubDomains'"	void {anonymous}::LogHttpOperationDetails(const std::shared_ptr<mipns::HttpOperation>&)	140689141360320
Info	2022-08-24 13:52:59.602	auth_request_transformer.cpp:155	msedge --enable-crashpad (1363046)	"Requesting auth token from app. Resource: 'https://aadrm.com', Authority: 'https://login.windows.net/73bbf4e9-0688-4946-aea9-bd0bb40ecf07', Scope: '73bbf4e9-0688-4946-aea9-bd0bb40ecf07', Claims: ''"	std::__cxx11::string mipns::AuthRequestTransformer::GetAuthToken(const mipns::AuthDelegate::OAuth2Challenge&, const std::shared_ptr<void>&)	140689141360320
Info	2022-08-24 13:52:59.602	auth_request_transformer.cpp:169	msedge --enable-crashpad (1363046)	"Authentication response time (seconds): 2.1989e-05"	std::__cxx11::string mipns::AuthRequestTransformer::GetAuthToken(const mipns::AuthDelegate::OAuth2Challenge&, const std::shared_ptr<void>&)	140689141360320
Info	2022-08-24 13:52:59.602	http_director_impl.cpp:132	msedge --enable-crashpad (1363046)	"Sending HTTP request: ID: 9d421391-55f4-456c-bb34-4b4dff487050, Type: POST, Url: https://api.aadrm.com/my/v2/enduserlicenses, Body Size: 9838, Headers['Accept'] = 'application/json', Headers['Content-Type'] = 'application/json', Headers['Authorization'] = 'Name:Williams, Barry (Charles Campbell College);UOID:8366c80b-3f0e-469c-8649-7041cd502c9d;Tenant:73bbf4e9-0688-4946-aea9-bd0bb40ecf07;Audience:https://aadrm.com;Scopes:user_impersonation;', Headers['Accept-Language'] = 'en-US', Headers['x-ms-rms-request-id'] = '0514cb35-f0d1-4d27-bc63-bdde514c2127', Headers['x-ms-rms-platform-id'] = 'AppName=Microsoft Edge;AppVersion=104.0.1293.63;DevicePlatform=WindowsStore;SDKVersion=4.3;UniqueId=ecd6b820-32c2-49b6-98a6-444530e5a77a;OsName=Arch Linux;OsVersion=5.17.9-arch1-1;MipVersion=1.11.55-alpha;'"	void mipns::HttpDirectorImpl::DoSendHttp(bool, const std::shared_ptr<mipns::HttpTelemetryHelper>&, const std::shared_ptr<mipns::HttpRequestBase>&, const std::shared_ptr<void>&, const std::function<void(const std::shared_ptr<mipns::HttpRequest>&, const std::shared_ptr<mipns::HttpResponse>&)>&, const std::function<void(const std::__exception_ptr::exception_ptr&)>&)	140689141360320
Info	2022-08-24 13:53:00.050	http_client_base.cpp:45	msedge --enable-crashpad (1363046)	"HTTP response time (seconds): 0.446952 ID: 9d421391-55f4-456c-bb34-4b4dff487050"	mipns::HttpClientBase::SendAsync(const std::shared_ptr<mipns::HttpRequest>&, const std::shared_ptr<void>&, const std::function<void(std::shared_ptr<mipns::HttpOperation>)>&)::<lambda(const std::shared_ptr<mipns::HttpOperation>&)>	140688077481664
Info	2022-08-24 13:53:00.050	http_director_impl.cpp:38	msedge --enable-crashpad (1363046)	"Received HTTP response: ID: 9d421391-55f4-456c-bb34-4b4dff487050, Status: 200, Time: 2022-08-24T04:23:00Z, Body: SCRUBBED, Headers['Date'] = 'Wed, 24 Aug 2022 04:22:59 GMT', Headers['Pragma'] = 'no-cache', Headers['Expires'] = '-1', Headers['X-Cache'] = 'CONFIG_NOCACHE', Headers['Content-Type'] = 'application/json; charset=utf-8', Headers['X-MSEdge-Ref'] = 'Ref A: 2DDC462DA73743828C1FAF4991D567E0 Ref B: MEL01EDGE1610 Ref C: 2022-08-24T04:22:59Z', Headers['X-Powered-By'] = 'ASP.NET', Headers['Cache-Control'] = 'no-cache', Headers['CorrelationId'] = '9d421391-55f4-456c-bb34-4b4dff487050', Headers['Content-Length'] = '1047', Headers['X-AspNet-Version'] = '4.0.30319', Headers['client-request-id'] = '9d421391-55f4-456c-bb34-4b4dff487050', Headers['Strict-Transport-Security'] = 'max-age=31536000; includeSubDomains'"	void {anonymous}::LogHttpOperationDetails(const std::shared_ptr<mipns::HttpOperation>&)	140689141360320
Info	2022-08-24 13:53:00.050	auth_info_store.cpp:50	msedge --enable-crashpad (1363046)	"Adding OAuth2 challenge to cache. Domain: api.aadrm.com IssuerId: '36f20724-69e2-4a33-b639-d941116a60f2' Challenge: 'Bearer resource=""https://aadrm.com"", realm=""73bbf4e9-0688-4946-aea9-bd0bb40ecf07"", authorization=""https://login.windows.net/73bbf4e9-0688-4946-aea9-bd0bb40ecf07/oauth2/authorize""'"	void mipns::AuthInfoStore::AddChallenge(const string&, const string&, const string&)	140689141360320
Info	2022-08-24 13:53:00.050	usage_restrictions_client.cpp:220	msedge --enable-crashpad (1363046)	"Examining a usage restrictions response:AccessStatus: AccessGrantedTemplateId: 00000000-0000-0000-0000-000000000000Name: Restricted AccessReferrer: Owner: Barry.Williams485@schools.sa.edu.auCipherMode: MICROSOFT.CBC4KAllowOfflineAccess: 0LicenseValidUntil: 2022-08-24T04:22:59ZContentId: 77b6b574-f3e3-44d9-80a2-54180ac28a90LabelId: 00000000-0000-0000-0000-000000000000FromTemplate: 0"	void mipns::ValidateAndLogLicenseResponse(const mipns::UsageRestrictionsResponse&, bool, const std::shared_ptr<mipns::TelemetryContext>&, const std::shared_ptr<mipns::TelemetryManager>&)	140689141360320
Info	2022-08-24 13:53:00.050	api_utils.h:212	msedge --enable-crashpad (1363046)	"Start calling success callback for API: protection_engine_create_consuming_protection_handler"	mipns::TryExecuteSuccessCallback(const SuccessFunc&, const ResultType&, bool, const std::shared_ptr<mipns::TaskDispatcherDelegate>&, const string&, const std::shared_ptr<void>&)::<lambda()> [with SuccessFunc = mipns::ProtectionEngineImpl::CreateProtectionHandlerForConsumption(const mipns::ProtectionHandler::ConsumptionSettings&, const std::shared_ptr<void>&)::<lambda(const std::shared_ptr<mipns::UsageRestrictionsResponse>&)>; ResultType = std::shared_ptr<mipns::UsageRestrictionsResponse>]	140689141360320
Info	2022-08-24 13:53:00.051	api_utils.h:214	msedge --enable-crashpad (1363046)	"Ended calling success callback for API: protection_engine_create_consuming_protection_handler"	mipns::TryExecuteSuccessCallback(const SuccessFunc&, const ResultType&, bool, const std::shared_ptr<mipns::TaskDispatcherDelegate>&, const string&, const std::shared_ptr<void>&)::<lambda()> [with SuccessFunc = mipns::ProtectionEngineImpl::CreateProtectionHandlerForConsumption(const mipns::ProtectionHandler::ConsumptionSettings&, const std::shared_ptr<void>&)::<lambda(const std::shared_ptr<mipns::UsageRestrictionsResponse>&)>; ResultType = std::shared_ptr<mipns::UsageRestrictionsResponse>]	140689141360320
Info	2022-08-24 13:53:00.051	protection_engine_impl.cpp:797	msedge --enable-crashpad (1363046)	"Ended API call: protection_engine_create_consuming_protection_handler"	virtual std::shared_ptr<mipns::ProtectionHandler> mipns::ProtectionEngineImpl::CreateProtectionHandlerForConsumption(const mipns::ProtectionHandler::ConsumptionSettings&, const std::shared_ptr<void>&)	140689141360320
Info	2022-08-24 13:53:00.051	protection_handler_impl.cpp:312	msedge --enable-crashpad (1363046)	" +ProtectionHandlerImpl::DecryptBuffer"	virtual int64_t mipns::ProtectionHandlerImpl::DecryptBuffer(int64_t, const uint8_t*, int64_t, uint8_t*, int64_t, bool)	140689141360320
Info	2022-08-24 13:53:00.051	protection_handler_impl.cpp:325	msedge --enable-crashpad (1363046)	" -ProtectionHandlerImpl::DecryptBuffer"	virtual int64_t mipns::ProtectionHandlerImpl::DecryptBuffer(int64_t, const uint8_t*, int64_t, uint8_t*, int64_t, bool)	140689141360320
Error	2022-08-24 13:53:00.051	license_parser.cpp:168	msedge --enable-crashpad (1363046)	"XPath returned no results"	std::vector<std::shared_ptr<mipns::xml::XmlNode> > {anonymous}::GetXmlNodesFromPath(const mipns::xml::XmlDocument&, const string&, const std::shared_ptr<mipns::xml::XmlNode>&)	140689141360320
Error	2022-08-24 13:53:00.051	license_parser.cpp:168	msedge --enable-crashpad (1363046)	"XPath returned no results"	std::vector<std::shared_ptr<mipns::xml::XmlNode> > {anonymous}::GetXmlNodesFromPath(const mipns::xml::XmlDocument&, const string&, const std::shared_ptr<mipns::xml::XmlNode>&)	140689141360320
Info	2022-08-24 13:53:00.051	protection_engine_impl.cpp:797	msedge --enable-crashpad (1363046)	"Starting API call: protection_engine_create_consuming_protection_handler"	virtual std::shared_ptr<mipns::ProtectionHandler> mipns::ProtectionEngineImpl::CreateProtectionHandlerForConsumption(const mipns::ProtectionHandler::ConsumptionSettings&, const std::shared_ptr<void>&)	140689141360320
Info	2022-08-24 13:53:00.052	protection_engine_impl.cpp:797	msedge --enable-crashpad (1363046)	"Starting API task: protection_engine_create_consuming_protection_handler"	virtual std::shared_ptr<mipns::ProtectionHandler> mipns::ProtectionEngineImpl::CreateProtectionHandlerForConsumption(const mipns::ProtectionHandler::ConsumptionSettings&, const std::shared_ptr<void>&)	140689141360320
Info	2022-08-24 13:53:00.052	usage_restrictions_client.cpp:109	msedge --enable-crashpad (1363046)	"Searching for cached usage restrictions response"	virtual std::shared_ptr<mipns::UsageRestrictionsResponse> mipns::UsageRestrictionsClient::FindCachedRestResponse(const mipns::UsageRestrictionsClientArgs&)	140689141360320
Info	2022-08-24 13:53:00.052	service_discovery_helper.cpp:179	msedge --enable-crashpad (1363046)	"Using publishing license domains for service discovery"	std::shared_ptr<mipns::ServiceDetails> mipns::ServiceDiscoveryHelper::GetServiceDetailsWithLicense(const std::vector<std::__cxx11::basic_string<char> >&, const string&)	140689141360320
Info	2022-08-24 13:53:00.052	service_discovery_helper.cpp:206	msedge --enable-crashpad (1363046)	"No redirected url found"	std::shared_ptr<mipns::ServiceDetails> mipns::ServiceDiscoveryHelper::GetServiceDetailsWithLicense(const std::vector<std::__cxx11::basic_string<char> >&, const string&)	140689141360320
Info	2022-08-24 13:53:00.052	service_discovery_helper.cpp:221	msedge --enable-crashpad (1363046)	"No cached DNS entry found"	std::shared_ptr<mipns::ServiceDetails> mipns::ServiceDiscoveryHelper::GetServiceDetailsWithLicense(const std::vector<std::__cxx11::basic_string<char> >&, const string&)	140689141360320
Info	2022-08-24 13:53:00.052	service_discovery_helper.cpp:255	msedge --enable-crashpad (1363046)	"Service Details Domain: https://ff47f615-3738-4b23-8ea0-d40f1b072282.rms.ap.aadrm.com/_wmcs/licensing"	std::shared_ptr<mipns::ServiceDetails> mipns::ServiceDiscoveryHelper::GetServiceDetailsWithLicense(const std::vector<std::__cxx11::basic_string<char> >&, const string&)	140689141360320
Info	2022-08-24 13:53:00.052	service_discovery_helper.cpp:256	msedge --enable-crashpad (1363046)	"Service Details DNS-resolved URL: https://api.aadrm.com"	std::shared_ptr<mipns::ServiceDetails> mipns::ServiceDiscoveryHelper::GetServiceDetailsWithLicense(const std::vector<std::__cxx11::basic_string<char> >&, const string&)	140689141360320
Info	2022-08-24 13:53:00.052	service_discovery_helper.cpp:280	msedge --enable-crashpad (1363046)	"Service Details Endpoint Type: Azure RMS"	std::shared_ptr<mipns::ServiceDetails> mipns::ServiceDiscoveryHelper::GetServiceDetailsWithLicense(const std::vector<std::__cxx11::basic_string<char> >&, const string&)	140689141360320
Info	2022-08-24 13:53:00.052	service_discovery_helper.cpp:290	msedge --enable-crashpad (1363046)	"Service discovery disabled. Using default service URLs"	std::shared_ptr<mipns::ServiceDiscoveryDetails> mipns::ServiceDiscoveryHelper::FindCachedServiceDiscoveryDetails(const std::shared_ptr<mipns::ServiceDetails>&)	140689141360320
Info	2022-08-24 13:53:00.052	protection_http_provider.cpp:45	msedge --enable-crashpad (1363046)	"https://api.aadrm.com/my/v2/enduserlicenses is auto-approved and requires no user consent."	virtual bool mipns::ProtectionHttpProvider::RequestUserConsent(const string&, const mipns::Identity&, const string&)	140689141360320
Info	2022-08-24 13:53:00.052	auth_info_store.cpp:76	msedge --enable-crashpad (1363046)	"Found OAuth2 challenge in cache. Domain: api.aadrm.com IssuerId: '36f20724-69e2-4a33-b639-d941116a60f2' Challenge: 'Bearer resource=""https://aadrm.com"", realm=""73bbf4e9-0688-4946-aea9-bd0bb40ecf07"", authorization=""https://login.windows.net/73bbf4e9-0688-4946-aea9-bd0bb40ecf07/oauth2/authorize""'"	std::__cxx11::string mipns::AuthInfoStore::FindChallenge(const string&, const string&)	140689141360320
Info	2022-08-24 13:53:00.052	auth_request_transformer.cpp:155	msedge --enable-crashpad (1363046)	"Requesting auth token from app. Resource: 'https://aadrm.com', Authority: 'https://login.windows.net/73bbf4e9-0688-4946-aea9-bd0bb40ecf07', Scope: '73bbf4e9-0688-4946-aea9-bd0bb40ecf07', Claims: ''"	std::__cxx11::string mipns::AuthRequestTransformer::GetAuthToken(const mipns::AuthDelegate::OAuth2Challenge&, const std::shared_ptr<void>&)	140689141360320
Info	2022-08-24 13:53:00.052	auth_request_transformer.cpp:169	msedge --enable-crashpad (1363046)	"Authentication response time (seconds): 2.2349e-05"	std::__cxx11::string mipns::AuthRequestTransformer::GetAuthToken(const mipns::AuthDelegate::OAuth2Challenge&, const std::shared_ptr<void>&)	140689141360320
Info	2022-08-24 13:53:00.052	http_director_impl.cpp:132	msedge --enable-crashpad (1363046)	"Sending HTTP request: ID: 90dccd68-73ef-40f9-9d20-500508fde90b, Type: POST, Url: https://api.aadrm.com/my/v2/enduserlicenses, Body Size: 9838, Headers['Accept'] = 'application/json', Headers['Content-Type'] = 'application/json', Headers['Authorization'] = 'Name:Williams, Barry (Charles Campbell College);UOID:8366c80b-3f0e-469c-8649-7041cd502c9d;Tenant:73bbf4e9-0688-4946-aea9-bd0bb40ecf07;Audience:https://aadrm.com;Scopes:user_impersonation;', Headers['Accept-Language'] = 'en-US', Headers['x-ms-rms-platform-id'] = 'AppName=Microsoft Edge;AppVersion=104.0.1293.63;DevicePlatform=WindowsStore;SDKVersion=4.3;UniqueId=ecd6b820-32c2-49b6-98a6-444530e5a77a;OsName=Arch Linux;OsVersion=5.17.9-arch1-1;MipVersion=1.11.55-alpha;'"	void mipns::HttpDirectorImpl::DoSendHttp(bool, const std::shared_ptr<mipns::HttpTelemetryHelper>&, const std::shared_ptr<mipns::HttpRequestBase>&, const std::shared_ptr<void>&, const std::function<void(const std::shared_ptr<mipns::HttpRequest>&, const std::shared_ptr<mipns::HttpResponse>&)>&, const std::function<void(const std::__exception_ptr::exception_ptr&)>&)	140689141360320
Info	2022-08-24 13:53:00.287	http_client_base.cpp:45	msedge --enable-crashpad (1363046)	"HTTP response time (seconds): 0.234428 ID: 90dccd68-73ef-40f9-9d20-500508fde90b"	mipns::HttpClientBase::SendAsync(const std::shared_ptr<mipns::HttpRequest>&, const std::shared_ptr<void>&, const std::function<void(std::shared_ptr<mipns::HttpOperation>)>&)::<lambda(const std::shared_ptr<mipns::HttpOperation>&)>	140688111052480
Info	2022-08-24 13:53:00.287	http_director_impl.cpp:38	msedge --enable-crashpad (1363046)	"Received HTTP response: ID: 90dccd68-73ef-40f9-9d20-500508fde90b, Status: 200, Time: 2022-08-24T04:23:00Z, Body: SCRUBBED, Headers['Date'] = 'Wed, 24 Aug 2022 04:22:59 GMT', Headers['Pragma'] = 'no-cache', Headers['Expires'] = '-1', Headers['X-Cache'] = 'CONFIG_NOCACHE', Headers['Content-Type'] = 'application/json; charset=utf-8', Headers['X-MSEdge-Ref'] = 'Ref A: 3AF3B6D3AF8543A2A5360AADBE3BE3AE Ref B: MEL01EDGE1207 Ref C: 2022-08-24T04:23:00Z', Headers['X-Powered-By'] = 'ASP.NET', Headers['Cache-Control'] = 'no-cache', Headers['CorrelationId'] = '90dccd68-73ef-40f9-9d20-500508fde90b', Headers['Content-Length'] = '1047', Headers['X-AspNet-Version'] = '4.0.30319', Headers['client-request-id'] = '90dccd68-73ef-40f9-9d20-500508fde90b', Headers['Strict-Transport-Security'] = 'max-age=31536000; includeSubDomains'"	void {anonymous}::LogHttpOperationDetails(const std::shared_ptr<mipns::HttpOperation>&)	140689141360320
Info	2022-08-24 13:53:00.287	usage_restrictions_client.cpp:220	msedge --enable-crashpad (1363046)	"Examining a usage restrictions response:AccessStatus: AccessGrantedTemplateId: 00000000-0000-0000-0000-000000000000Name: Restricted AccessReferrer: Owner: Barry.Williams485@schools.sa.edu.auCipherMode: MICROSOFT.CBC4KAllowOfflineAccess: 0LicenseValidUntil: 2022-08-24T04:23:00ZContentId: 77b6b574-f3e3-44d9-80a2-54180ac28a90LabelId: 00000000-0000-0000-0000-000000000000FromTemplate: 0"	void mipns::ValidateAndLogLicenseResponse(const mipns::UsageRestrictionsResponse&, bool, const std::shared_ptr<mipns::TelemetryContext>&, const std::shared_ptr<mipns::TelemetryManager>&)	140689141360320
Info	2022-08-24 13:53:00.287	api_utils.h:212	msedge --enable-crashpad (1363046)	"Start calling success callback for API: protection_engine_create_consuming_protection_handler"	mipns::TryExecuteSuccessCallback(const SuccessFunc&, const ResultType&, bool, const std::shared_ptr<mipns::TaskDispatcherDelegate>&, const string&, const std::shared_ptr<void>&)::<lambda()> [with SuccessFunc = mipns::ProtectionEngineImpl::CreateProtectionHandlerForConsumption(const mipns::ProtectionHandler::ConsumptionSettings&, const std::shared_ptr<void>&)::<lambda(const std::shared_ptr<mipns::UsageRestrictionsResponse>&)>; ResultType = std::shared_ptr<mipns::UsageRestrictionsResponse>]	140689141360320
Info	2022-08-24 13:53:00.287	api_utils.h:214	msedge --enable-crashpad (1363046)	"Ended calling success callback for API: protection_engine_create_consuming_protection_handler"	mipns::TryExecuteSuccessCallback(const SuccessFunc&, const ResultType&, bool, const std::shared_ptr<mipns::TaskDispatcherDelegate>&, const string&, const std::shared_ptr<void>&)::<lambda()> [with SuccessFunc = mipns::ProtectionEngineImpl::CreateProtectionHandlerForConsumption(const mipns::ProtectionHandler::ConsumptionSettings&, const std::shared_ptr<void>&)::<lambda(const std::shared_ptr<mipns::UsageRestrictionsResponse>&)>; ResultType = std::shared_ptr<mipns::UsageRestrictionsResponse>]	140689141360320
Info	2022-08-24 13:53:00.287	protection_engine_impl.cpp:797	msedge --enable-crashpad (1363046)	"Ended API call: protection_engine_create_consuming_protection_handler"	virtual std::shared_ptr<mipns::ProtectionHandler> mipns::ProtectionEngineImpl::CreateProtectionHandlerForConsumption(const mipns::ProtectionHandler::ConsumptionSettings&, const std::shared_ptr<void>&)	140689141360320
Info	2022-08-24 13:53:00.287	protection_handler_impl.cpp:312	msedge --enable-crashpad (1363046)	" +ProtectionHandlerImpl::DecryptBuffer"	virtual int64_t mipns::ProtectionHandlerImpl::DecryptBuffer(int64_t, const uint8_t*, int64_t, uint8_t*, int64_t, bool)	140689141360320
Info	2022-08-24 13:53:00.287	protection_handler_impl.cpp:325	msedge --enable-crashpad (1363046)	" -ProtectionHandlerImpl::DecryptBuffer"	virtual int64_t mipns::ProtectionHandlerImpl::DecryptBuffer(int64_t, const uint8_t*, int64_t, uint8_t*, int64_t, bool)	140689141360320
Info	2022-08-24 13:53:13.924	mip_core_context_impl.cpp:83	msedge --enable-crashpad (1363046)	"Loading context for application: [Microsoft Edge], Application version: [104.0.1293.63], Application ID: [ecd6b820-32c2-49b6-98a6-444530e5a77a], Process name: [msedge --enable-crashpad], MIP SDK version: [1.11.55-alpha], Path: [/home/bazza/.config/microsoft-edge/Default/Sync Data]"	mipns::MipCoreContextImpl::MipCoreContextImpl(const std::shared_ptr<const mipns::MipConfiguration>&, const std::shared_ptr<mipns::OneDSAriaHelper>&)	140689141360320
Warning	2022-08-24 13:53:13.924	protection_profile_impl_cc.cpp:98	msedge --enable-crashpad (1363046)	"Deprecated API call - please provide the auth delegate when creating the protection engine instead"	mip_cc_result MIP_CC_CreateProtectionProfileSettings(mip_cc_mip_context, mip_cc_cache_storage_type, const void*, mip_cc_consent_callback, mip_cc_handle**, mip_cc_error*)	140689141360320
Info	2022-08-24 13:53:13.924	protection_profile_impl.cpp:56	msedge --enable-crashpad (1363046)	"Starting API call: protection_profile_pre_initialize"	std::shared_ptr<mipns::TelemetryContext> mipns::PreInitializeProtection(const mipns::ProtectionProfile::Settings&)	140689141360320
Info	2022-08-24 13:53:13.924	protection_profile_impl.cpp:52	msedge --enable-crashpad (1363046)	"Loading protection profile. EUL caching state: [1]"	mipns::PreInitializeProtection(const mipns::ProtectionProfile::Settings&)::<lambda(const std::shared_ptr<mipns::TelemetryContext>&)>	140689141360320
Info	2022-08-24 13:53:13.924	protection_profile_impl.cpp:56	msedge --enable-crashpad (1363046)	"Ended API call: protection_profile_pre_initialize"	std::shared_ptr<mipns::TelemetryContext> mipns::PreInitializeProtection(const mipns::ProtectionProfile::Settings&)	140689141360320
Info	2022-08-24 13:53:13.924	protection_profile_impl.cpp:164	msedge --enable-crashpad (1363046)	"Starting API call: protection_profile_load"	static std::shared_ptr<mipns::ProtectionProfile> mipns::ProtectionProfile::Load(const mipns::ProtectionProfile::Settings&)	140689141360320
Info	2022-08-24 13:53:13.925	storage_manager.cpp:76	msedge --enable-crashpad (1363046)	"StorageManager configured to use in-memory caching."	mipns::StorageManager::StorageManager(const std::shared_ptr<mipns::MipContext>&, const string&, bool, const std::shared_ptr<mipns::LicenseStore>&, const std::shared_ptr<mipns::StorageDelegate>&)	140689141360320
Info	2022-08-24 13:53:13.925	storage_manager.cpp:85	msedge --enable-crashpad (1363046)	"Protection storage path: :memory:"	mipns::StorageManager::StorageManager(const std::shared_ptr<mipns::MipContext>&, const string&, bool, const std::shared_ptr<mipns::LicenseStore>&, const std::shared_ptr<mipns::StorageDelegate>&)	140689141360320
Info	2022-08-24 13:53:13.925	protection_profile_impl.cpp:186	msedge --enable-crashpad (1363046)	"Protection API configured to use default HttpDelegate"	mipns::ProtectionProfileImpl::ProtectionProfileImpl(const mipns::ProtectionProfile::Settings&, const std::shared_ptr<mipns::ProtectionEngineManager>&, const std::shared_ptr<mipns::HttpDelegate>&, const std::shared_ptr<mipns::TaskDispatcherDelegate>&, const std::shared_ptr<mipns::TelemetryContext>&)	140689141360320
Info	2022-08-24 13:53:13.925	protection_profile_impl.cpp:192	msedge --enable-crashpad (1363046)	"Protection API configured to use default TaskDispatcherDelegate"	mipns::ProtectionProfileImpl::ProtectionProfileImpl(const mipns::ProtectionProfile::Settings&, const std::shared_ptr<mipns::ProtectionEngineManager>&, const std::shared_ptr<mipns::HttpDelegate>&, const std::shared_ptr<mipns::TaskDispatcherDelegate>&, const std::shared_ptr<mipns::TelemetryContext>&)	140689141360320
Info	2022-08-24 13:53:13.925	protection_profile_impl.cpp:164	msedge --enable-crashpad (1363046)	"Ended API call: protection_profile_load"	static std::shared_ptr<mipns::ProtectionProfile> mipns::ProtectionProfile::Load(const mipns::ProtectionProfile::Settings&)	140689141360320
Info	2022-08-24 13:53:13.925	protection_profile_impl.cpp:292	msedge --enable-crashpad (1363046)	"Starting API call: protection_profile_add_engine"	virtual std::shared_ptr<mipns::ProtectionEngine> mipns::ProtectionProfileImpl::AddEngine(const mipns::ProtectionEngine::Settings&)	140689141360320
Info	2022-08-24 13:53:13.925	protection_engine_manager.cpp:63	msedge --enable-crashpad (1363046)	"Adding engine with ID 4d18b514-60f8-40f7-b946-59dae9e0b960"	std::shared_ptr<mipns::ProtectionEngine> mipns::ProtectionEngineManager::AddEngine(const mipns::ProtectionEngine::Settings&, const std::shared_ptr<mipns::TelemetryContext>&)	140689141360320
Info	2022-08-24 13:53:13.925	protection_profile_impl.cpp:292	msedge --enable-crashpad (1363046)	"Ended API call: protection_profile_add_engine"	virtual std::shared_ptr<mipns::ProtectionEngine> mipns::ProtectionProfileImpl::AddEngine(const mipns::ProtectionEngine::Settings&)	140689141360320
Info	2022-08-24 13:53:13.925	protection_engine_impl.cpp:554	msedge --enable-crashpad (1363046)	"Starting API call: protection_engine_create_publishing_protection_handler"	virtual std::shared_ptr<mipns::ProtectionHandler> mipns::ProtectionEngineImpl::CreateProtectionHandlerForPublishing(const mipns::ProtectionHandler::PublishingSettings&, const std::shared_ptr<void>&)	140689141360320
Info	2022-08-24 13:53:13.925	protection_engine_impl.cpp:554	msedge --enable-crashpad (1363046)	"Starting API task: protection_engine_create_publishing_protection_handler"	virtual std::shared_ptr<mipns::ProtectionHandler> mipns::ProtectionEngineImpl::CreateProtectionHandlerForPublishing(const mipns::ProtectionHandler::PublishingSettings&, const std::shared_ptr<void>&)	140689141360320
Info	2022-08-24 13:53:13.925	service_discovery_helper.cpp:185	msedge --enable-crashpad (1363046)	"Using cloud endpoint base url domain 'https://api.aadrm.com' for service discovery"	std::shared_ptr<mipns::ServiceDetails> mipns::ServiceDiscoveryHelper::GetServiceDetailsWithLicense(const std::vector<std::__cxx11::basic_string<char> >&, const string&)	140689141360320
Info	2022-08-24 13:53:13.925	service_discovery_helper.cpp:206	msedge --enable-crashpad (1363046)	"No redirected url found"	std::shared_ptr<mipns::ServiceDetails> mipns::ServiceDiscoveryHelper::GetServiceDetailsWithLicense(const std::vector<std::__cxx11::basic_string<char> >&, const string&)	140689141360320
Info	2022-08-24 13:53:13.925	service_discovery_helper.cpp:221	msedge --enable-crashpad (1363046)	"No cached DNS entry found"	std::shared_ptr<mipns::ServiceDetails> mipns::ServiceDiscoveryHelper::GetServiceDetailsWithLicense(const std::vector<std::__cxx11::basic_string<char> >&, const string&)	140689141360320
Info	2022-08-24 13:53:13.925	service_discovery_helper.cpp:255	msedge --enable-crashpad (1363046)	"Service Details Domain: https://api.aadrm.com"	std::shared_ptr<mipns::ServiceDetails> mipns::ServiceDiscoveryHelper::GetServiceDetailsWithLicense(const std::vector<std::__cxx11::basic_string<char> >&, const string&)	140689141360320
Info	2022-08-24 13:53:13.925	service_discovery_helper.cpp:256	msedge --enable-crashpad (1363046)	"Service Details DNS-resolved URL: https://api.aadrm.com"	std::shared_ptr<mipns::ServiceDetails> mipns::ServiceDiscoveryHelper::GetServiceDetailsWithLicense(const std::vector<std::__cxx11::basic_string<char> >&, const string&)	140689141360320
Info	2022-08-24 13:53:13.925	service_discovery_helper.cpp:280	msedge --enable-crashpad (1363046)	"Service Details Endpoint Type: Azure RMS"	std::shared_ptr<mipns::ServiceDetails> mipns::ServiceDiscoveryHelper::GetServiceDetailsWithLicense(const std::vector<std::__cxx11::basic_string<char> >&, const string&)	140689141360320
Info	2022-08-24 13:53:13.925	service_discovery_helper.cpp:290	msedge --enable-crashpad (1363046)	"Service discovery disabled. Using default service URLs"	std::shared_ptr<mipns::ServiceDiscoveryDetails> mipns::ServiceDiscoveryHelper::FindCachedServiceDiscoveryDetails(const std::shared_ptr<mipns::ServiceDetails>&)	140689141360320
Info	2022-08-24 13:53:13.925	protection_http_provider.cpp:45	msedge --enable-crashpad (1363046)	"https://api.aadrm.com/my/v2/publishinglicenses is auto-approved and requires no user consent."	virtual bool mipns::ProtectionHttpProvider::RequestUserConsent(const string&, const mipns::Identity&, const string&)	140689141360320
Info	2022-08-24 13:53:13.925	auth_info_store.cpp:80	msedge --enable-crashpad (1363046)	"Failed to find OAuth2 challenge in cache. Domain: api.aadrm.com IssuerId: ''"	std::__cxx11::string mipns::AuthInfoStore::FindChallenge(const string&, const string&)	140689141360320
Info	2022-08-24 13:53:13.925	auth_request_transformer.cpp:48	msedge --enable-crashpad (1363046)	"Failed to get auth token from cached auth header. Failed with: [InternalError: 'Cannot parse empty auth header or request URL']"	virtual void mipns::AuthRequestTransformer::TransformRequestPriorToInitialSend(mipns::HttpRequestBase&, const std::shared_ptr<void>&)	140689141360320
Info	2022-08-24 13:53:13.925	http_director_impl.cpp:132	msedge --enable-crashpad (1363046)	"Sending HTTP request: ID: 7fb7880c-8ea2-45a1-8458-36b7d962aca7, Type: POST, Url: https://api.aadrm.com/my/v2/publishinglicenses, Body Size: 228, Headers['Accept'] = 'application/json', Headers['Content-Type'] = 'application/json', Headers['Accept-Language'] = 'en-US', Headers['x-ms-rms-platform-id'] = 'AppName=Microsoft Edge;AppVersion=104.0.1293.63;DevicePlatform=WindowsStore;SDKVersion=4.3;UniqueId=ecd6b820-32c2-49b6-98a6-444530e5a77a;OsName=Arch Linux;OsVersion=5.17.9-arch1-1;MipVersion=1.11.55-alpha;'"	void mipns::HttpDirectorImpl::DoSendHttp(bool, const std::shared_ptr<mipns::HttpTelemetryHelper>&, const std::shared_ptr<mipns::HttpRequestBase>&, const std::shared_ptr<void>&, const std::function<void(const std::shared_ptr<mipns::HttpRequest>&, const std::shared_ptr<mipns::HttpResponse>&)>&, const std::function<void(const std::__exception_ptr::exception_ptr&)>&)	140689141360320
Info	2022-08-24 13:53:14.111	http_client_base.cpp:45	msedge --enable-crashpad (1363046)	"HTTP response time (seconds): 0.185437 ID: 7fb7880c-8ea2-45a1-8458-36b7d962aca7"	mipns::HttpClientBase::SendAsync(const std::shared_ptr<mipns::HttpRequest>&, const std::shared_ptr<void>&, const std::function<void(std::shared_ptr<mipns::HttpOperation>)>&)::<lambda(const std::shared_ptr<mipns::HttpOperation>&)>	140688144623296
Info	2022-08-24 13:53:14.111	http_director_impl.cpp:38	msedge --enable-crashpad (1363046)	"Received HTTP response: ID: 7fb7880c-8ea2-45a1-8458-36b7d962aca7, Status: 401, Time: 2022-08-24T04:23:14Z, Body: {""Message"":""Authorization has been denied for this request.""}, Headers['Date'] = 'Wed, 24 Aug 2022 04:23:13 GMT', Headers['Pragma'] = 'no-cache', Headers['Expires'] = '-1', Headers['X-Cache'] = 'CONFIG_NOCACHE', Headers['Content-Type'] = 'application/json; charset=utf-8', Headers['X-MSEdge-Ref'] = 'Ref A: 26B301EEB71740DB9229A30682606E01 Ref B: MEL01EDGE1422 Ref C: 2022-08-24T04:23:14Z', Headers['X-Powered-By'] = 'ASP.NET', Headers['Cache-Control'] = 'no-cache', Headers['CorrelationId'] = '7fb7880c-8ea2-45a1-8458-36b7d962aca7', Headers['Content-Length'] = '61', Headers['WWW-Authenticate'] = 'Bearer resource=""https://aadrm.com"", realm="""", authorization=""https://login.windows.net/common/oauth2/authorize""', Headers['X-AspNet-Version'] = '4.0.30319', Headers['client-request-id'] = '7fb7880c-8ea2-45a1-8458-36b7d962aca7', Headers['Strict-Transport-Security'] = 'max-age=31536000; includeSubDomains'"	void {anonymous}::LogHttpOperationDetails(const std::shared_ptr<mipns::HttpOperation>&)	140689141360320
Info	2022-08-24 13:53:14.111	auth_request_transformer.cpp:155	msedge --enable-crashpad (1363046)	"Requesting auth token from app. Resource: 'https://aadrm.com', Authority: 'https://login.windows.net/common', Scope: '', Claims: ''"	std::__cxx11::string mipns::AuthRequestTransformer::GetAuthToken(const mipns::AuthDelegate::OAuth2Challenge&, const std::shared_ptr<void>&)	140689141360320
Info	2022-08-24 13:53:14.111	auth_request_transformer.cpp:169	msedge --enable-crashpad (1363046)	"Authentication response time (seconds): 1.874e-05"	std::__cxx11::string mipns::AuthRequestTransformer::GetAuthToken(const mipns::AuthDelegate::OAuth2Challenge&, const std::shared_ptr<void>&)	140689141360320
Info	2022-08-24 13:53:14.111	http_director_impl.cpp:132	msedge --enable-crashpad (1363046)	"Sending HTTP request: ID: 4e0c9284-bb13-4ec9-ac85-c9354aaef3f7, Type: POST, Url: https://api.aadrm.com/my/v2/publishinglicenses, Body Size: 228, Headers['Accept'] = 'application/json', Headers['Content-Type'] = 'application/json', Headers['Authorization'] = 'Name:Williams, Barry (Charles Campbell College);UOID:8366c80b-3f0e-469c-8649-7041cd502c9d;Tenant:73bbf4e9-0688-4946-aea9-bd0bb40ecf07;Audience:https://aadrm.com;Scopes:user_impersonation;', Headers['Accept-Language'] = 'en-US', Headers['x-ms-rms-request-id'] = '7fb7880c-8ea2-45a1-8458-36b7d962aca7', Headers['x-ms-rms-platform-id'] = 'AppName=Microsoft Edge;AppVersion=104.0.1293.63;DevicePlatform=WindowsStore;SDKVersion=4.3;UniqueId=ecd6b820-32c2-49b6-98a6-444530e5a77a;OsName=Arch Linux;OsVersion=5.17.9-arch1-1;MipVersion=1.11.55-alpha;'"	void mipns::HttpDirectorImpl::DoSendHttp(bool, const std::shared_ptr<mipns::HttpTelemetryHelper>&, const std::shared_ptr<mipns::HttpRequestBase>&, const std::shared_ptr<void>&, const std::function<void(const std::shared_ptr<mipns::HttpRequest>&, const std::shared_ptr<mipns::HttpResponse>&)>&, const std::function<void(const std::__exception_ptr::exception_ptr&)>&)	140689141360320
Info	2022-08-24 13:53:14.566	http_client_base.cpp:45	msedge --enable-crashpad (1363046)	"HTTP response time (seconds): 0.45419 ID: 4e0c9284-bb13-4ec9-ac85-c9354aaef3f7"	mipns::HttpClientBase::SendAsync(const std::shared_ptr<mipns::HttpRequest>&, const std::shared_ptr<void>&, const std::function<void(std::shared_ptr<mipns::HttpOperation>)>&)::<lambda(const std::shared_ptr<mipns::HttpOperation>&)>	140688278308544
Info	2022-08-24 13:53:14.566	http_director_impl.cpp:38	msedge --enable-crashpad (1363046)	"Received HTTP response: ID: 4e0c9284-bb13-4ec9-ac85-c9354aaef3f7, Status: 200, Time: 2022-08-24T04:23:14Z, Body: SCRUBBED, Headers['Date'] = 'Wed, 24 Aug 2022 04:23:13 GMT', Headers['Pragma'] = 'no-cache', Headers['Expires'] = '-1', Headers['X-Cache'] = 'CONFIG_NOCACHE', Headers['Content-Type'] = 'application/json; charset=utf-8', Headers['X-MSEdge-Ref'] = 'Ref A: 0D7F4DAC780A4ACDA1C7A9B5C80E653D Ref B: MEL01EDGE0808 Ref C: 2022-08-24T04:23:14Z', Headers['X-Powered-By'] = 'ASP.NET', Headers['Cache-Control'] = 'no-cache', Headers['CorrelationId'] = '4e0c9284-bb13-4ec9-ac85-c9354aaef3f7', Headers['Content-Length'] = '10200', Headers['X-AspNet-Version'] = '4.0.30319', Headers['client-request-id'] = '4e0c9284-bb13-4ec9-ac85-c9354aaef3f7', Headers['Strict-Transport-Security'] = 'max-age=31536000; includeSubDomains'"	void {anonymous}::LogHttpOperationDetails(const std::shared_ptr<mipns::HttpOperation>&)	140689141360320
Info	2022-08-24 13:53:14.566	auth_info_store.cpp:50	msedge --enable-crashpad (1363046)	"Adding OAuth2 challenge to cache. Domain: api.aadrm.com IssuerId: '' Challenge: 'Bearer resource=""https://aadrm.com"", realm="""", authorization=""https://login.windows.net/common/oauth2/authorize""'"	void mipns::AuthInfoStore::AddChallenge(const string&, const string&, const string&)	140689141360320
Info	2022-08-24 13:53:14.566	publish_client.cpp:134	msedge --enable-crashpad (1363046)	"Publish response (custom): Id: 00000000-0000-0000-0000-000000000000, Name: , Description: , Referrer: , Owner: Barry.Williams485@schools.sa.edu.au, ContentId: 89c5c776-6d26-40f5-8cd1-2e42ad7c4bcd, LicenseSize: 7352, JsonPreLicenseSize: 0, XmlPreLicenseSize: 0, KeySize: 32, KeyCipherMode: MICROSOFT.CBC4K, KeyAlgorithm: AES"	virtual std::shared_ptr<mipns::PublishResponse> mipns::PublishClient::GetRestResponseFromHttpResponse(const std::shared_ptr<mipns::HttpRequest>&, const std::shared_ptr<mipns::HttpResponse>&, const mipns::PublishClientArgs&)	140689141360320
Info	2022-08-24 13:53:14.566	api_utils.h:212	msedge --enable-crashpad (1363046)	"Start calling success callback for API: protection_engine_create_publishing_protection_handler"	mipns::TryExecuteSuccessCallback(const SuccessFunc&, const ResultType&, bool, const std::shared_ptr<mipns::TaskDispatcherDelegate>&, const string&, const std::shared_ptr<void>&)::<lambda()> [with SuccessFunc = mipns::ProtectionEngineImpl::CreateProtectionHandlerForPublishing(const mipns::ProtectionHandler::PublishingSettings&, const std::shared_ptr<void>&)::<lambda(const std::shared_ptr<mipns::PublishResponse>&)>; ResultType = std::shared_ptr<mipns::PublishResponse>]	140689141360320
Info	2022-08-24 13:53:14.566	api_utils.h:214	msedge --enable-crashpad (1363046)	"Ended calling success callback for API: protection_engine_create_publishing_protection_handler"	mipns::TryExecuteSuccessCallback(const SuccessFunc&, const ResultType&, bool, const std::shared_ptr<mipns::TaskDispatcherDelegate>&, const string&, const std::shared_ptr<void>&)::<lambda()> [with SuccessFunc = mipns::ProtectionEngineImpl::CreateProtectionHandlerForPublishing(const mipns::ProtectionHandler::PublishingSettings&, const std::shared_ptr<void>&)::<lambda(const std::shared_ptr<mipns::PublishResponse>&)>; ResultType = std::shared_ptr<mipns::PublishResponse>]	140689141360320
Info	2022-08-24 13:53:14.566	protection_engine_impl.cpp:554	msedge --enable-crashpad (1363046)	"Ended API call: protection_engine_create_publishing_protection_handler"	virtual std::shared_ptr<mipns::ProtectionHandler> mipns::ProtectionEngineImpl::CreateProtectionHandlerForPublishing(const mipns::ProtectionHandler::PublishingSettings&, const std::shared_ptr<void>&)	140689141360320
Info	2022-08-24 13:53:14.566	protection_handler_impl.cpp:288	msedge --enable-crashpad (1363046)	" +ProtectionHandlerImpl::EncryptBuffer"	virtual int64_t mipns::ProtectionHandlerImpl::EncryptBuffer(int64_t, const uint8_t*, int64_t, uint8_t*, int64_t, bool)	140689141360320
Info	2022-08-24 13:53:14.566	protection_handler_impl.cpp:301	msedge --enable-crashpad (1363046)	" -ProtectionHandlerImpl::EncryptBuffer"	virtual int64_t mipns::ProtectionHandlerImpl::EncryptBuffer(int64_t, const uint8_t*, int64_t, uint8_t*, int64_t, bool)	140689141360320
Info	2022-08-24 13:53:14.567	protection_handler_impl.cpp:288	msedge --enable-crashpad (1363046)	" +ProtectionHandlerImpl::EncryptBuffer"	virtual int64_t mipns::ProtectionHandlerImpl::EncryptBuffer(int64_t, const uint8_t*, int64_t, uint8_t*, int64_t, bool)	140689141360320
Info	2022-08-24 13:53:14.567	protection_handler_impl.cpp:301	msedge --enable-crashpad (1363046)	" -ProtectionHandlerImpl::EncryptBuffer"	virtual int64_t mipns::ProtectionHandlerImpl::EncryptBuffer(int64_t, const uint8_t*, int64_t, uint8_t*, int64_t, bool)	140689141360320
